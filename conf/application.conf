# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName=help-to-save

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation and configures all filters required by a Platform microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

# Starts up the UC Threshold Orchestrator
play.modules.enabled += "uk.gov.hmrc.helptosave.modules.UCThresholdModule"

# Starts up the Eligibility Stats Actor
play.modules.enabled += "uk.gov.hmrc.helptosave.modules.EligibilityStatsModule"

play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.disabled += play.filters.hosts.AllowedHostsFilter

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "s6P7A361Pc3qh954bfqLg9DEQdJAsUVEuRxAeJclwOUJAGynKAweBa4OyUVhr6Jl"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

http-verbs.retries.ssl-engine-closed-already.enabled = true

httpHeadersWhitelist += ${microservice.correlationIdHeaderName}

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = false
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


mongodb {
  uri = "mongodb://localhost:27017/help-to-save"
}

mongo-async-driver {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = DEBUG
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    des {
      # environment is one of 'ist0', 'clone' and 'live'
      environment = ist0
      token = "test"
    }

    itmp-eligibility-check {
      host = localhost
      port = 7002
    }

    itmp-enrolment {
      host = localhost
      port = 7002
    }

    itmp-threshold {
      host = localhost
      port = 7002
    }

    paye-personal-details {
      host = localhost
      port = 7002
      originatorId = "DA_PTA"
    }

    help-to-save-proxy {
      host = localhost
      port = 7005
    }

    bank-account-reputation {
      host = localhost
      port = 7002
    }
  }

  correlationIdHeaderName = "X-Correlation-ID"

  user-cap {
    daily {
      enabled = true
      limit = 2147483647
    }
    total {
      enabled = true
      limit = 2147483647
    }
  }
}

# must be a Base64 encoded string of 128/192/256 bits
crypto.encryption-key = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="

nino-logging.enabled = true

stride {
  base64-encoded-roles = [ "aHRzIGhlbHBkZXNrIGFkdmlzb3I=", "aHRzX2hlbHBkZXNrX2Fkdmlzb3I=" ]
  base64-encoded-secure-roles = [ "aHRzIGhlbHBkZXNrIGFkdmlzb3Igc2VjdXJl", "aHRzX2hlbHBkZXNrX2Fkdmlzb3Jfc2VjdXJl" ]
}

  nsi {
    no-account-error-message-id = "HTS-API015-006"
    get-account {
      version = "V1.0"
    }
    get-transactions {
      version = "V1.0"
    }
    create-account {
      version = "V2.0"
    }
  }

  eligibility-stats {
    enabled           = true
    lock-duration     = 60 minutes
    initial-delay     = 5 minutes
    frequency         = 3 hours
  }

  # let min-backoff be `m` and max-backoff be `M`. Then `2m-M` cannot equal zero
  uc-threshold {
    ask-timeout = 10.seconds
    min-backoff = 1.second
    max-backoff = 5.seconds
    number-of-retries-until-initial-wait-doubles = 5
    # at 'update-time' the in-memory value of the threshold value will be cleared resulting in a call
    # to DES every time an eligibility check is made. After 'update-time-delay' a new in-memory value
    # is retrieved from DES and stored until the next scheduled update
    update-timezone   = "Europe/London"
    update-time       = "00:00"
    update-time-delay = "30 minutes"
  }